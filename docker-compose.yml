version: '3.8'

services:


  backend:
    container_name: backend2
    build: ./backend/Social_network
    command: >
      bash -c "python manage.py migrate
      && python manage.py collectstatic
      && gunicorn Social_network.wsgi:application --bind 0.0.0.0:8000"
    restart: unless-stopped
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    ports:
      - '8000:8000'
    env_file:
      - ./.env
    environment:
      - ENV=$ENV_PROD
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    #      - CELERY_BROKER=redis://redis:6379/0
    #      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      #      - redis
      - db

  frontend:
    container_name: frontend
    build: ./
    restart: unless-stopped
    volumes:
      - ./deployment/nginx/nginx.default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    ports:
      - '80:80'
    depends_on:
      - backend


  db:
    container_name: db2
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=$PASSWORD
      - POSTGRES_DB=$NAME


  #  celery_worker_for_db:
  #    build: ./backend/Social_network
  #    #    command: celery --app=tasks worker --loglevel=INFO
  #    command: celery --app=tasks worker -Q task_db --loglevel=INFO
  #
  #    volumes:
  #      - ./backend/Social_network:/usr/src/app/
  #
  #    # для доступа к базе при отправке email
  #    env_file:
  #      - ./.env
  #    environment:
  #      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
  #      - CELERY_BROKER=redis://redis:6379/0
  #      - CELERY_BACKEND=redis://redis:6379/0
  #    depends_on:
  #      - backend
  #      - redis

  #  celery_worker_photos:
  #    build: ./backend/Social_network
  #    #    command: celery --app=tasks worker --loglevel=INFO
  #    command: celery --app=tasks worker -Q photos --loglevel=INFO
  #
  #    volumes:
  #      - ./backend/Social_network:/usr/src/app/
  #
  #    # для доступа к базе при отправке email
  #    env_file:
  #      - ./.env
  #    environment:
  #      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
  #      - CELERY_BROKER=redis://redis:6379/0
  #      - CELERY_BACKEND=redis://redis:6379/0
  #    depends_on:
  #      - backend
  #      - redis

  #  celery_worker_for_email:
  #    build: ./backend/Social_network
  #    command: celery --app=tasks worker -Q email --loglevel=INFO
  #    volumes:
  #      - ./backend/Social_network:/usr/src/app/
  #
  #    # для доступа к базе при отправке email
  #    env_file:
  #      - ./.env
  #    environment:
  #      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
  #      - CELERY_BROKER=redis://redis:6379/0
  #      - CELERY_BACKEND=redis://redis:6379/0
  #    depends_on:
  #      - backend
  #      - redis

  celery_worker_test:
    build: ./backend/Social_network
    #    command: celery --app=tasks worker --loglevel=INFO
    command: celery --app=tasks worker -Q test_task --loglevel=INFO

    volumes:
      - ./backend/Social_network:/usr/src/app/

    # для доступа к базе при отправке email
    env_file:
      - ./.env
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      #      - redis
      - rabbitmq

  celery_worker_task_1:
    build: ./backend/Social_network
    command: celery --app=tasks worker -Q task_1 --loglevel=INFO
    volumes:
      - ./backend/Social_network:/usr/src/app/

    # для доступа к базе при отправке email
    env_file:
      - ./.env
#    environment:
#      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
#      - CELERY_BROKER=redis://redis:6379/0
#      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      #      - redis
      - rabbitmq

  celery_worker_task_2:
    build: ./backend/Social_network
    command: celery --app=tasks worker -Q task_2 --loglevel=INFO
    volumes:
      - ./backend/Social_network:/usr/src/app/

    # для доступа к базе при отправке email
    env_file:
      - ./.env
#    environment:
#      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
#      - CELERY_BROKER=redis://redis:6379/0
#      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      #      - redis
      - rabbitmq

  #  redis:
  #    image: redis:7.2-alpine
  #
  #    # для доступа к базе при отправке email
  #    env_file:
  #      - ./.env

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
#    environment:
#      - RABBITMQ_DEFAULT_USER=quest
#      - RABBITMQ_DEFAULT_PASS=quest

#  rabbitmq-management:
#    image: rabbitmq:3.12-management
#    #    ports:
#    #      - "15671:15672"
#    environment:
#      - RABBITMQ_DEFAULT_USER=admin
#      - RABBITMQ_DEFAULT_PASS=admin


  #  celery-flower:
  #    build: ./backend/Social_network
  #    command: celery flower -A tasks --port=5556 --broker=redis://redis:6379/0
  #    ports:
  #      - '5556:5556'
  #    environment:
  #      - CELERY_BROKER=redis://redis:6379/0
  #      - CELERY_BACKEND=redis://redis:6379/0
  #    depends_on:
  #      - backend
  #      - redis
  ##      - celery_worker_for_email
  ##      - celery_worker_for_db
  #      - celery_worker_task_1
  #      - celery_worker_task_2

  celery-beat:
    build: ./backend/Social_network
    command: celery -A tasks beat --loglevel=INFO
    volumes:
      - ./project/:/usr/src/app/
    #    environment:
    #      - DEBUG=1
    #      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      #      - redis
      - rabbitmq
volumes:
  postgres_data:
  static_value:
  media_value:

